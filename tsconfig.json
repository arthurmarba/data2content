{
  "compilerOptions": {
    "target": "ES2022",
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    "module": "esnext",
    "moduleResolution": "NodeNext", // <<< ALTERADO de "Bundler" para "NodeNext" >>>
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "baseUrl": ".",
    "paths": {
      "@/*": ["./src/*"],
      "@models/*": ["./src/app/models/*"],
      "@lib/*": ["./src/app/lib/*"],
      "@auth/*": ["./src/app/api/auth/*"]
    },
    "plugins": [
      {
        "name": "next"
      }
    ],
    "forceConsistentCasingInFileNames": true,
    "typeRoots": ["./types", "./node_modules/@types"],
    "types": ["node", "next"], // <<< Adicionado "node" para garantir tipos do Node.js >>>

    // Boas práticas de rigor
    "strictNullChecks": true,
    "noUncheckedIndexedAccess": true, // <<< Considere desabilitar temporariamente se causar muitos erros não relacionados >>>
    "noImplicitAny": true,
    "noImplicitReturns": true,
    "noFallthroughCasesInSwitch": true
  },
  "include": [
    "next-env.d.ts",
    "**/*.ts", // <<< Cobre todos os arquivos .ts, incluindo consultantService.ts >>>
    "**/*.tsx",
    ".next/types/**/*.ts",
    "types/**/*.d.ts" // Mantém seus tipos customizados
    // "src/app/lib/mercadopago.js", // <<< REMOVIDO - Arquivos .js geralmente não são incluídos aqui para o TS, o build processa >>>
    // "next.config.js", // <<< REMOVIDO - Agora deve ser next.config.cjs e é lido pelo Next.js, não TS >>>
    // "src/app/lib/consultantService.mts" // <<< REMOVIDO - Voltamos para .ts e já está coberto por **/*.ts >>>
  ],
  "exclude": [
    "node_modules",
    // Redundante, mas não prejudica:
    // "**/node_modules/*",
    // "**/dist/*",
    // "**/.next/*",
    // "**/out/*"
  ]
}